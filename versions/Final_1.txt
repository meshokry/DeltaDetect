#include <stdio.h>
#include <stdlib.h>
#include<windows.h>
/*Define two pointers to files*/
FILE*first=NULL;
FILE*second=NULL;
/*[Description]
 *This function give the user type of mismatch like(additional,missed,mismatch)character in the INPUT_2.txt
 */
void option_one()
{
    /*Define 4 locations two for each file one for the current character and second for next character*/
    char current_ch1,current_ch2,next_ch1,next_ch2;
    /*Define 3 flags:-
     *1)flag =1 if the two files are identical
     *2)flag1=1 to read the character from INPUT_1.txt
     *3)flag2=1 to read the character from INPUT_2.txt
     */
    char flag=1,flag1=1,flag2=1;
    /*Define two variables
     *line: to count number of lines
     *i: to count number of character in the line
     */
    long line=1,i=1;

    /*clear screen before start showing the output*/
    system("cls");

/*open the two files and make the mode r mean that we will read only from them*/
first=fopen("INPUT_1.txt","r");
second=fopen("INPUT_2.txt","r");
/*If there is no files in the same location exit the program*/
  if(first==NULL)
     {
         printf("Can't find INPUT_1.txt\n");
         system("pause");
         exit(1);
     }
   else if(second==NULL)
     {
         printf("Can't find INPUT_1.txt\n");
         system("pause");
         exit(1);
     }
/*take first two characters from the two files*/
fscanf(first,"%c",&current_ch1);
fscanf(second,"%c",&current_ch2);

do{
    /*Here this flag to check whether i will read the next character or no from INPUT_1.txt*/
    if(flag1)
       {
          fscanf(first,"%c",&next_ch1);
       }
    /*Here this flag to check whether i will read the next character or no from INPUT_2.txt*/
    if(flag2)
       {
          fscanf(second,"%c",&next_ch2);
       }
    /*If the two characters is matched then jump to the next characters and make the flags equal one to read the two next characters*/
    if(current_ch1==current_ch2)
    {
        current_ch2=next_ch2;
        current_ch1=next_ch1;
        flag1=1;
        flag2=1;
    }
   /*If the two characters is not matched then see the options */
    else if(current_ch1!=current_ch2)
    {
        /*Option one: see if the next character in the INPUT_2 same as the current character in INPUT_1*/
        /*This means that the current character in INPUT_2 is additional and if it didn't exist the files will be matched*/
        if(next_ch2==current_ch1)
        {
            printf("\033[35mThere is an additional character at INPUT_2.txt at line %d in the cell %d\033[0m\n",line,i);
            /*After printing the message we will move the current character in INPUT_2 to the next*/
            current_ch2=next_ch2;
            /*Then make the flag1=0 to prevent read a new character from INPUT_1 to be synchronized with INPUT_2*/
            flag1=0;
            /*Make flag2=1 to read the next character from INPUT_2*/
            flag2=1;
        }
        /*Option two: see if the next character in the INPUT_1 same as the current character in INPUT_2*/
        /*This means that there is a missed character in INPUT_2 and if it exists the files will be matched*/
       else if(current_ch2==next_ch1)
        {
            printf("\033[33mThere is a missing character at INPUT_2.txt at the line %d in the cell %d\n\033[0m",line,i);
            /*After printing the message we will move the current character in INPUT_1 to the next*/
            current_ch1=next_ch1;
            /*Then make the flag2=0 to prevent read a new character from INPUT_2 to be synchronized with INPUT_1*/
            flag2=0;
            /*Make flag1=1 to read the next character from INPUT_1*/
            flag1=1;
        }
        /*Option three: if the character do not match and the next don't match*/
       else
       {
           printf("\033[31mThere is a mismatch at line %d in the character %d\033[0m\n",line,i);
           /*moving the current character in INPUT_1 to the next*/
           current_ch2=next_ch2;
           /*moving the current character in INPUT_2 to the next*/
           current_ch1=next_ch1;
           /*Make flag1=1 to read the next character from INPUT_1*/
           flag1=1;
           /*Make flag2=1 to read the next character from INPUT_2*/
           flag2=1;
       }
           /*Then make the flag=0 to prevent printing identical after the scanning finished*/
            flag=0;
    }

if(current_ch2=='\n'&&current_ch1=='\n')
    {
        line++;
        i=-1;
    }

i++;
}
while(!feof(second)&&!feof(first));/*Checking if end of the file is reached or not*/

/*Closing the two files*/
fclose(first);
fclose(second);

/*Here printing Identical if all characters are matched*/
if(flag)
{
    printf("Identical\n");
}

printf("\n\n\033[34mFinished scanning press any key to return to main menu\033[0m");

getch();
}
void option_two()
{
char current_ch1,current_ch2,next_ch1,next_ch2,flag1=1,flag2=1;

system("cls");

first=fopen("INPUT_1.txt","r");
second=fopen("INPUT_2.txt","r");

fscanf(first,"%c",&current_ch1);
fscanf(second,"%c",&current_ch2);

do{
    if(flag1)
       {
          fscanf(first,"%c",&next_ch1);
       }
    if(flag2)
       {
          fscanf(second,"%c",&next_ch2);
       }

    if(current_ch1==current_ch2)
    {
        printf("%c",current_ch2);
        current_ch2=next_ch2;
        current_ch1=next_ch1;
        flag1=1;
        flag2=1;
    }
    else if(current_ch1!=current_ch2)
    {
        if(next_ch2==current_ch1)
        {
         printf("\033[31m%c\033[0m",current_ch2);
         current_ch2=next_ch2;
         flag1=0;
        }
       else if(current_ch2==next_ch1)
        {
            printf("\033[41m%c\033[0m",current_ch1);
            current_ch1=next_ch1;
            flag2=0;
        }
       else
       {
           printf("\033[31m%c\033[0m",current_ch2);
           current_ch2=next_ch2;
           current_ch1=next_ch1;
           flag1=1;
           flag2=1;
       }

    }

}
while(!feof(second)&&!feof(first));

fclose(first);
fclose(second);

printf("\n\n\033[34mFinished scanning press any key to return to main menu\033[0m");

getch();

}
char main_menu();
void How_program_works();

int main()
{
char option='N';

SetConsoleTitle("Difference");
   while(1)
  {
       system("cls");

       printf("Welcome to Difference Program\n1)Run\n2)How it works\n");

       option=getch();

   if(option=='1')
    {
      option=main_menu();
         if(option=='1')
         {
          option_one();
         }
         else if(option=='2')
         {
          option_two();
         }
    }
    else if(option=='2')
    {
      how_program_works();
    }

   }

    return 0;
}
char main_menu()
{
    system("cls");//i put it here and in the option 2 to avoid blinking screen when user enter anything other 1 or 2
    printf("Enter the option you want\n1)get the location of the error only\n2)print INPUT_2.txt and highlight the different from INPUT_1.txt\n");
    return getch();
}
void how_program_works()
{
    system("cls");
    printf("1.You should create Two Text Files in the same location of the program and name them INPUT_1 and INPUT_2 respectively\n");
    printf("2.Put the text you want to check in the two files\n");
    printf("3.The program compare INPUT_2.txt with INPUT_1.txt so you should put in INPUT_1 the original text\n");
    printf("4.If the character was by red like this \033[31m%c\033[0m this means that this character do not match with the character in INPUT_1.txt\n",'$');
    printf("\nExample:-\nINPUT_1.txt:--->mido is a good boy\nINPUT_2.txt:--->mido is a gaod boy\nResult:-------->mido is a g\033[31m%c\033[0mod boy\n\n",'a');
    printf("5.If the cell was red like this \033[41m%c\033[0m this means that INPUT_2.txt needs a character in this red cell to make the two files \nidentical\n",32);
    printf("\nExample:-\nINPUT_1.txt:--->mido is a good boy\nINPUT_2.txt:--->mido s a gaod boy\nResult:-------->mido \033[41m%c\033[0ms a good boy\n\n",'i');
    system("pause");
}
/*void option_one()
{
char ch1,ch2,flag=1;
unsigned long i=1,line=1;

system("cls");

first=fopen("INPUT_1.txt","r");
second=fopen("INPUT_2.txt","r");



do{
    fscanf(first,"%c",&ch1);
    fscanf(second,"%c",&ch2);
    if(ch1!=ch2)
       {
         printf("Error at line %d in character %d\n\n\n",line,i);
         system("pause");
         flag=0;
       }
    if(ch2=='\n')
      {
          line++;
          i=1;
      }
    i++;
}
while(!feof(second)&&!feof(first));

fclose(first);
fclose(second);

if(flag)
printf("Identical\n");

printf("\033[34mFinished scanning press any key to return to main menu\033[0m");
getch();
}*/
